FROM nvidia/cuda:11.3.1-devel-ubuntu20.04 AS app

# RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
# RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub

ARG DEBIAN_FRONTEND=noninteractive

ARG conda_ver="py38_4.12.0-Linux-x86_64"
ARG user_id=1000
ARG group_id=1000

# Install apt dependencies
RUN apt-get update && apt-get upgrade -y && \
    apt-get install -y --no-install-recommends \
    curl wget git sudo unzip vim \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgl1-mesa-glx \
    build-essential \
    lsb-release \
    protobuf-compiler \
    gpg-agent \
    apt-transport-https \
    ca-certificates \
    libglib2.0-0 \
    && rm -rf /var/lib/apt/lists/*

# Simple root password in case we want to customize the container
RUN echo "root:root" | chpasswd

ENV APP_USER="user"
RUN addgroup --gid ${group_id} ${APP_USER}
RUN useradd \
    -G video,audio,sudo \
    --uid ${user_id} \
    --gid ${group_id} \
    -d /home/${APP_USER} \
    -p ${APP_USER} \
    -m ${APP_USER}

RUN apt-get update && \
    apt-get -y install sudo

RUN echo "user:user" | chpasswd && adduser user sudo

# install miniconda
ENV CONDA_HOME=/opt/conda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-${conda_ver}.sh \
    && bash Miniconda3-${conda_ver}.sh -b -p ${CONDA_HOME}
ENV PATH=${CONDA_HOME}/bin:$PATH

# RUN conda install -y pytorch torchvision cudatoolkit=11.3 -c pytorch-nightly
# RUN conda install pytorch==1.10.1 torchvision==0.11.2 cudatoolkit=11.3 -c pytorch
# RUN conda install pytorch torchvision pytorch-cuda=11.7 -c pytorch -c nvidia
RUN conda install pytorch==1.11.0 torchvision==0.12.0 cudatoolkit=11.3 -c pytorch

WORKDIR /workspace
COPY --chown=user . /workspace
ENV PATH=/home/user/.local/bin:$PATH
ENV LAYERJOT_HOME="/layerjot"
RUN cd /workspace && pip install -r d2_requirements.txt \
    && pip install -e . \
    && python -m pip install --upgrade pip

USER ${APP_USER}
